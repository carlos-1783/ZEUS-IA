import{r as y,R as N}from"./vendor-bdffe547.js";var i=(e=>(e.CONNECT="connect",e.DISCONNECT="disconnect",e.RECONNECT="reconnect",e.RECONNECTING="reconnecting",e.MESSAGE="message",e.SYSTEM_STATUS="system_status",e.AUTH_RESPONSE="auth_response",e.ERROR="error",e.AUTH_ERROR="auth_error",e.CONNECTION_ERROR="connection_error",e.STATUS_UPDATE="status_update",e.CUSTOM="custom",e))(i||{});const o=y("disconnected"),p=y(!1),a=y(null);let r=null,h=0;const v=3;let u=null,T=null,m=null;const l={};Object.values(i).forEach(e=>{l[e]=new Set});const O=()=>{r&&(r.close(1e3,"Componente desmontado"),r=null),u&&(clearTimeout(u),u=null)},c={addEventListener(e,n){const s=e;return l[s]||(l[s]=new Set),l[s].add(n),()=>{this.removeEventListener(e,n)}},removeEventListener(e,n){const s=e;l[s]&&l[s].delete(n)},emit(e,n){const s={type:e,data:n,timestamp:new Date().toISOString()},w=l[e];w&&w.forEach(S=>{try{S(s)}catch{}})},_scheduleReconnect(){if(h>=v){o.value="error";return}const e=Math.min(1e3*Math.pow(1.5,h),3e3);h++,o.value="reconnecting",u=setTimeout(()=>{requestAnimationFrame(()=>{T&&this.connect(T).catch(n=>{h<v&&this._scheduleReconnect()})})},e)},async connect(e){try{if(r&&this.disconnect(),!e||e.trim()==="")throw new Error("No se proporcionó un token de autenticación válido");try{const d=JSON.parse(atob(e.split(".")[1])),f=Math.floor(Date.now()/1e3);if(d.exp&&d.exp<f)throw new Error("El token de autenticación ha expirado")}catch{}T=e,o.value="connecting",a.value=null;const n=`client-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,s=!1;let w;if(!s)return!1;const S=new URL(w);return S.searchParams.set("token",e),new Promise((d,f)=>{try{r=new WebSocket(S.toString()),r.binaryType="arraybuffer";const E=setTimeout(()=>{if(r&&r.readyState===WebSocket.CONNECTING){r.close(4e3,"Connection timeout");const t="Tiempo de conexión agotado";a.value=new Error(t),o.value="error",f(new Error(t))}},5e3);r.onopen=()=>{clearTimeout(E),p.value=!0,o.value="connected",h=0,this._startHeartbeat(),this.emit(i.CONNECT,{type:i.CONNECT}),d(!0)},r.onclose=t=>{clearTimeout(E),p.value=!1,t.code===1e3?o.value="disconnected":t.code===4e3?(o.value="error",a.value=new Error("Tiempo de conexión agotado")):t.code===1006?(o.value="error",a.value=new Error("Conexión cerrada inesperadamente")):t.code===1008?(o.value="error",a.value=new Error("Token de autenticación inválido o expirado")):(o.value="error",a.value=new Error(`Conexión cerrada con código: ${t.code}`)),t.code!==1e3&&t.code!==1001&&t.code!==1008&&(a.value=new Error(`Conexión cerrada: ${t.reason||"Código: "+t.code}`),this._scheduleReconnect()),this.emit(i.DISCONNECT,{type:i.DISCONNECT,code:t.code,reason:t.reason,wasClean:t.wasClean})},r.onerror=t=>{a.value=new Error("Error en la conexión WebSocket"),this.emit(i.ERROR,{type:i.ERROR,error:t}),o.value==="connecting"&&f(new Error("Error en la conexión WebSocket"))},r.onmessage=t=>{try{const C=typeof t.data=="string"?JSON.parse(t.data):t.data;this.emit(C.type||"message",C)}catch{}}}catch(E){a.value=E instanceof Error?E:new Error("Error al crear la conexión WebSocket"),o.value="error",f(E)}})}catch(n){throw o.value="error",a.value=n instanceof Error?n:new Error(String(n)),a.value}},disconnect(){if(this._stopHeartbeat(),r)try{(r.readyState===WebSocket.OPEN||r.readyState===WebSocket.CONNECTING)&&r.close(1e3,"User disconnected"),r.onopen=null,r.onclose=null,r.onerror=null,r.onmessage=null,r=null}catch{}u&&(clearTimeout(u),u=null),o.value="disconnected",p.value=!1},async send(e){if(!r)throw new Error("WebSocket no inicializado");if(r.readyState!==WebSocket.OPEN)throw new Error("WebSocket no está conectado");const n=typeof e=="string"?e:JSON.stringify(e);r.send(n)},get currentStatus(){return o.value},get isConnected(){return p.value},get currentError(){return a.value},_startHeartbeat(){m&&clearInterval(m),m=setInterval(()=>{if(r&&r.readyState===WebSocket.OPEN)try{r.send(JSON.stringify({type:"ping",timestamp:Date.now()}))}catch{}},3e4)},_stopHeartbeat(){m&&(clearInterval(m),m=null)},cleanup(){this._stopHeartbeat(),O()},useWebSocket(){const e=()=>{Object.values(i).forEach(n=>{l[n].clear()})};return{connect:c.connect.bind(c),disconnect:c.disconnect.bind(c),send:c.send.bind(c),addEventListener:c.addEventListener.bind(c),removeEventListener:c.removeEventListener.bind(c),cleanup:e,status:N(o),isConnected:N(p),error:N(a)}}},R=c.useWebSocket.bind(c);export{R as u};
