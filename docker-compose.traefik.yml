# ===============================================
# ZEUS-IA - Docker Compose con Traefik
# ===============================================

version: '3.8'

services:
  # Traefik como reverse proxy
  traefik:
    image: traefik:v3.0
    container_name: zeus-traefik
    restart: always
    command:
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@zeus-ia.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--global.sendanonymoususage=false"
      - "--log.level=INFO"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard de Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
      - traefik_logs:/var/log/traefik
    networks:
      - zeus-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.zeus-ia.com`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"

  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: zeus-db
    restart: always
    environment:
      POSTGRES_DB: zeus_ia_prod
      POSTGRES_USER: zeus_user
      POSTGRES_PASSWORD: zeus_secure_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - zeus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zeus_user -d zeus_ia_prod"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis
  redis:
    image: redis:7-alpine
    container_name: zeus-redis
    restart: always
    command: redis-server --appendonly yes --requirepass zeus_redis_password_2024
    volumes:
      - redis_data:/data
    networks:
      - zeus-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend FastAPI
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: zeus-backend
    restart: always
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - DATABASE_URL=postgresql://zeus_user:zeus_secure_password_2024@db:5432/zeus_ia_prod
      - REDIS_URL=redis://:zeus_redis_password_2024@redis:6379/0
    env_file:
      - .env.production
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - zeus-network
    volumes:
      - ./backend/logs:/app/logs
      - zeus_data:/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.zeus-ia.com`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.backend.middlewares=backend-stripprefix"

  # Frontend Vue.js
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: zeus-frontend
    restart: always
    networks:
      - zeus-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`zeus-ia.com`) || Host(`www.zeus-ia.com`) || Host(`app.zeus-ia.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  # WebSocket service
  websocket:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: zeus-websocket
    restart: always
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - DATABASE_URL=postgresql://zeus_user:zeus_secure_password_2024@db:5432/zeus_ia_prod
      - REDIS_URL=redis://:zeus_redis_password_2024@redis:6379/0
    env_file:
      - .env.production
    depends_on:
      - db
      - redis
    networks:
      - zeus-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.websocket.rule=Host(`ws.zeus-ia.com`)"
      - "traefik.http.routers.websocket.entrypoints=websecure"
      - "traefik.http.routers.websocket.tls.certresolver=letsencrypt"
      - "traefik.http.services.websocket.loadbalancer.server.port=8000"

volumes:
  postgres_data:
  redis_data:
  zeus_data:
  traefik_logs:

networks:
  zeus-network:
    driver: bridge
