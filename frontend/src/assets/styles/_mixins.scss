// Media query mixins
@mixin screen-sm {
  @media (min-width: map-get($breakpoints, 'sm')) {
    @content;
  }
}

@mixin screen-md {
  @media (min-width: map-get($breakpoints, 'md')) {
    @content;
  }
}

@mixin screen-lg {
  @media (min-width: map-get($breakpoints, 'lg')) {
    @content;
  }
}

@mixin screen-xl {
  @media (min-width: map-get($breakpoints, 'xl')) {
    @content;
  }
}

@mixin screen-2xl {
  @media (min-width: map-get($breakpoints, '2xl')) {
    @content;
  }
}

// Flexbox mixins
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-start {
  display: flex;
  justify-content: flex-start;
  align-items: center;
}

@mixin flex-end {
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

@mixin flex-col {
  display: flex;
  flex-direction: column;
}

@mixin flex-col-center {
  @include flex-col;
  justify-content: center;
  align-items: center;
}

// Position mixins
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixed-full {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

// Text mixins
@mixin text-ellipsis($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

// Button reset
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
  outline: inherit;
}

// Visually hidden (for accessibility)
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Scrollbar mixins
@mixin scrollbar($size: 8px, $thumb-color: var(--color-gray-400), $track-color: transparent) {
  &::-webkit-scrollbar {
    width: $size;
    height: $size;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $thumb-color;
    border-radius: $size / 2;
    border: 2px solid $track-color;
  }

  & {
    scrollbar-width: thin;
    scrollbar-color: $thumb-color $track-color;
  }
}

// Animation mixins
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};
    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }

  animation: $animations;
}

// Transition mixin
@mixin transition($properties...) {
  $transition: ();
  
  @each $property in $properties {
    $transition: append($transition, $property var(--transition-duration, 0.2s) var(--transition-timing, ease-in-out), $separator: comma);
  }
  
  transition: $transition;
}

// Gradient text
@mixin gradient-text($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-fill-color: transparent;
}

// Aspect ratio
@mixin aspect-ratio($width, $height) {
  position: relative;
  overflow: hidden;
  
  &::before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
  }
}

// Print styles helper
@mixin print {
  @media print {
    @content;
  }
}

// Dark mode helper
@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
  
  [data-theme='dark'] & {
    @content;
  }
}
